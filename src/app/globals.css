@import "tailwindcss";
@import 'prismjs/themes/prism.css';

/* @layer utilities {
  .bg-apple-pro-gradient {
    background-image: linear-gradient(to right top, #2E3192, #662D8C, #ED1E79, #FBB03B);
  }
} */

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

[data-rehype-pretty-code-figure] {
  margin-block: 1.5rem; /* 上下外边距 */
}

/* 标题 <figcaption> 的样式 */
[data-rehype-pretty-code-title] {
  padding: 0.5rem 1rem;
  font-size: 0.875rem; /* 14px */
  font-family: sans-serif;
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
  border: 1px solid transparent;
  border-bottom: none; /* 底部无边框，与 pre 无缝连接 */
}

/* pre 标签的样式需要调整，因为它的顶部圆角现在由 figcaption 负责 */
[data-rehype-pretty-code-figure] > pre {
  margin-block: 0; /* 移除 pre 的独立外边距，由 figure 控制 */
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-top: none; /* 移除 pre 的上边框 */
}

/* --- 行高亮的样式 --- */
.line[data-highlighted-line] {
  /* 
    使用半透明的颜色作为高亮背景，这样可以适应不同的主题背景色
    hsl(hue, saturation, lightness, alpha)
  */
  background-color: hsla(210, 80%, 60%, 0.15); 
}

/* 在暗色模式下，可以使用一个不同的高亮色 */
html.dark .line[data-highlighted-line] {
  background-color: hsla(210, 80%, 70%, 0.2);
}


/* 为 rehype-pretty-code 生成的 HTML 添加基础样式 */
pre {
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto; /* 当代码过长时，允许水平滚动 */
  font-family: 'Fira Code', 'JetBrains Mono', monospace; /* 推荐使用连字字体 */
  font-size: 0.9rem;
  line-height: 1.6;
}

html:not(.dark) pre[data-theme~="light-plus"] {
  background-color: #f6f8fa; /* GitHub Light 背景色 */
  border-color: #e1e4e8;
}

/*
  当 data-theme 属性中包含 "dark" 这个词时，在暗色模式下应用此样式。
*/
html.dark pre[data-theme~="laserwave"] {
  background-color: #1e293b; /* 一个更现代的深蓝色背景 */
  border-color: #334155;
}

/* 3. 设置代码颜色 (消费 CSS 变量) */
/*
  `code` 标签本身没有背景，它的背景来自于父级 `pre` 元素。
  我们在这里决定 `code` 标签应该使用哪个 shiki 颜色变量。
*/

/* 亮色模式下，让 code 使用 --shiki-light 变量 */
html:not(.dark) pre code span {
  color: var(--shiki-light);
  background-color: transparent;
}

/* 暗色模式下，让 code 使用 --shiki-dark 变量 */
html.dark pre code span {
  color: var(--shiki-dark);
  background-color: transparent;
}

/* 
  让每个 token (span) 继承 code 标签上设置的颜色。
  它自己的 --shiki-* 变量定义会被这个继承的 color 值使用。
  这个规则非常重要！
*/
pre code span {
  color: inherit; /* 或者 var(--shiki-light, var(--shiki-dark)) */
}


/* ----------------- 你自己的背景色样式 ----------------- */
